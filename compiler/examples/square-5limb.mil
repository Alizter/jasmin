/* need shifts, logical and, xor ( "<<=", ">>=", "&=", "^=") FIXME*/ 

for i in 0 .. n {
  x[i] = *(xp + i*8);
}

for i in 0 .. n {
  for j in i .. n {
    if i + j < n + 1 {
      if  i = 0 {
        if j = 0 {
	  (h,l) = x[0] * y[0];
	  r[0] = l;
	  m[0] = h;
	} else { 
	  x[0] <<= 1; 
	  ( h, l ) = x[0] * y[j];
	  r[j] = l;
	  m[j] = h;
	  }
	} else {
	  if i = j {
	    (h,l) = x[i] *x[j];
	    cf? r[i + j] += l;
	    m[i + j] += h + cf;
	  } else {
	    x[i] <<= 1;
	     (h,l) = x[i] *x[j];
	    cf? r[i + j] += l;
	    m[i + j] += h + cf;
	    }
	  }
    } else { 
      if i = j {
        ( h,l) = x[i] * 19;
      } else { 
        ( h,l) = x[i] * 38;
	}
        (h,l) = l *x[j];
	cf? r[i + j - n - 1] += l;
	m[i + j - n - 1] += h + cf;
      }
  }
}     
	
/* reduction part */
/* mask = 2^51 - 1 */	
				
for i in 0 ..n {
  if i = 0 {
    m[0] <<= 13;
    mult = r[0];
    r[0] &= mask;
    mult >>= 51;
    m[0] ^= mult;
  } else {
    m[i] <<= 13;
    mult = r[i]
    r[i] &= mask;
    r[i] += m[i - 1];
    mul >>= 51;
    m[i] ^=mult;
    }
}

(h, l) = m[n] * 19;
r[0] += l;

for i in 0 .. n {
  if i = 0 {
    mult = r[0];
    mult >>= 51;
    mult += r[1];
  } else {
    r[i] = mult;
    mult >>= 51;
    r[i - 1] &= mask;
    if i <> n { 
    mult += r[i + 1];   
    } else {
      ( h, l) =  mul * 19;
      r[0] += mult
      r[n] &= mask;
      }
    }
}

for i in 0 .. n {
  *( rp + i*8 ) -= r[i];
}