#!/bin/bash

# set -x
trap "exit" INT

OPTION="-pipeline -branchpredictor"
MAXJOBS="3"

declare -A SUBDIRS
declare -A SUBDIRS2

SUBDIRS[simple-examples/array-len.jazz]=""
SUBDIRS[simple-examples/array-len2.jazz]=""
SUBDIRS[simple-examples/fe25519_mul.jazz]=""
SUBDIRS[simple-examples/hw.jazz]=""
SUBDIRS[simple-examples/nolea.jazz]=""
SUBDIRS[simple-examples/threeway.jazz]=""

SUBDIRS[simple-examples/loop3.jazz]="-safetyparam ;RDX" # ;inlen
SUBDIRS[simple-examples/opti.jazz]="-safetyparam ;RDX" # ;len


SUBDIRS[poly1305/ref3/poly1305.japp]="-safetyparam ;RDX" # ;inlen
SUBDIRS[poly1305/avx2/poly1305.japp]="-safetyparam ;RDX" # ;inlen

SUBDIRS[chacha20/ref/chacha20.jazz]="-safetyparam ;RDX" # ;len
SUBDIRS2[chacha20/ref/chacha20.jazz]="-safetyparam RSI;RDX" # plain;len

SUBDIRS[chacha20/avx2/chacha20.jazz]="-safetyparam ;RDX" # ;len
SUBDIRS2[chacha20/avx2/chacha20.jazz]="-safetyparam RSI;RDX" # plain;len

SUBDIRS[aes/aes-ctr-alt.jazz]="-safetyparam ;RCX" # ;len
SUBDIRS2[aes/aes-ctr-alt.jazz]="-safetyparam RSI;RCX" # inp;len

CURJOBS=0
for i in "${!SUBDIRS[@]}"; do
  # If true, wait until the next background job finishes to continue.
  ((cur_jobs >= MAXJOBS)) && wait -n
  echo "Starting ${i}"
  (../jasminc ${OPTION} ${SUBDIRS[$i]} ${i} &> ${i}.res ;
   echo "=> Done ${i}, results" ;
   grep Safety ${i}.res | sed 's/^/  /'
  ) & ((++cur_jobs))
done

for i in "${!SUBDIRS2[@]}"; do
  # If true, wait until the next background job finishes to continue.
  ((cur_jobs >= MAXJOBS)) && wait -n
  echo "Starting ${i}"
  (../jasminc ${OPTION} ${SUBDIRS2[$i]} ${i} &> ${i}.res2 ;
   echo "=> Done (2) ${i}, results" ;
   grep Safety ${i}.res2 | sed 's/^/  /'
  ) & ((++cur_jobs))
done

wait
