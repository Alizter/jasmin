fn init (reg ptr u64[3] p) {
   inline int i;
   for i = 0 to 3 {
      p[i] = 0;
   }
   // return p
}

export fn foo() -> reg u64 {
  stack u64[3] s;
  reg ptr u64[3] ps;
  reg u64 r;
  inline int i;
  ps =& s;
  init(ps);      // p_aux = &s; p_aux = init(p_aux); s = p_aux;
  s = ps;
  r = 0;
  for i = 0 to 3 {
   r += s[i];
  }
  return r;
}