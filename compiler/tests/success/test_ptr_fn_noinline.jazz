fn init (reg ptr u64[3] p) -> reg ptr u64[3] {
   inline int i;
   for i = 0 to 3 {
      p[i] = 0;
   }
   return p;
}

export fn foo() -> reg u64 {
  stack u64[3] s;
  reg ptr u64[3] ps;
  reg u64 r;
  inline int i;
  // This is ugly we should be able to do
  // init(s) and the typing should do the transformation
  ps = s;
  ps = init(ps);  // s = init(s);
 
  r = 0;
  for i = 0 to 3 {
   r += ps[i];
  }
  return r;
}