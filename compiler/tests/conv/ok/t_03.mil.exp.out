renumbering identifiers in all function(s)
   REMOVED_TIME
inlining all calls (certified) in ``test'' function(s)
   REMOVED_TIME
>> after_inlining:
fn bar1(x.1 : reg u64, y.3 : reg u64, c.2 : reg bool) -> reg u64 * reg bool * reg u64 {
  x.1 -= y.3;
  return x.1,c.2,y.3;
}

fn foo1(x.4 : reg u64, y.6 : reg u64, c.5 : reg bool) -> reg u64 * reg bool * reg u64 {
  c.2 : reg bool
  x.1 : reg u64
  y.3 : reg u64
  x.4 += y.6;
  x.1 := x.4;
  y.3 := y.6;
  c.2 := c.5;
  x.1 -= y.3;
  x.4 := x.1;
  c.5 := c.2;
  y.6 := y.3;
  return x.4,c.5,y.6;
}

fn test() {
  c.2 : reg bool
  c.5 : reg bool
  cf.9 : reg bool
  cf_.11 : reg bool
  i.13 : inline u64
  u.7 : reg u64
  u_.10 : reg u64
  v.8 : reg u64
  v_.12 : reg u64
  x.1 : reg u64
  x.4 : reg u64
  y.3 : reg u64
  y.6 : reg u64
  u.7 = 0;
  v.8 = 0;
  x.4 := u.7;
  y.6 := v.8;
  c.5 := cf.9;
  x.4 += y.6;
  x.1 := x.4;
  y.3 := y.6;
  c.2 := c.5;
  x.1 -= y.3;
  x.4 := x.1;
  c.5 := c.2;
  y.6 := y.3;
  u_.10 := x.4;
  cf_.11 := c.5;
  v_.12 := y.6;
  for i.13 in 0..10 {
    while cf.9 {
      if cf.9 {
        x.4 := u.7;
        y.6 := v.8;
        c.5 := cf.9;
        x.4 += y.6;
        x.1 := x.4;
        y.3 := y.6;
        c.2 := c.5;
        x.1 -= y.3;
        x.4 := x.1;
        c.5 := c.2;
        y.6 := y.3;
        u_.10 := x.4;
        cf_.11 := c.5;
        v_.12 := y.6;
      } else {
        x.1 := u.7;
        y.3 := v.8;
        c.2 := cf.9;
        x.1 -= y.3;
        u_.10 := x.1;
        cf_.11 := c.2;
        v_.12 := y.3;
      }
    }
  }
}


total transformation time: REMOVED_TIME

total time (with save/print): REMOVED_TIME
