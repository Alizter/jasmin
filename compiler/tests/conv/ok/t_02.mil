fn foo1(x,y : reg u64, c : reg bool) -> reg u64 * reg bool * reg u64 {
  return x,c,y;
}

fn bar1(x,y : reg u64, c : reg bool) -> reg u64 * reg bool * reg u64 {
  return x,c,y;
}

fn test() {
  u, v : reg u64;
  cf : reg bool;
  u_, v_ : reg u64;
  cf_ : reg bool;

  u_,cf_,v_ = foo1(u,v,cf);
  u_,cf_,v_ = bar1(u,v,cf);
  u_,cf_,v_ = bar1(u,v,cf);
  u_,cf_,v_ = foo1(u,v,cf);
}

/*
START:CMD
#ARG="renumber_fun_unique,save[/tmp/before.mil][fun=test],test_conv[test],save[/tmp/after.mil][fun=test]"
ARG="renumber_fun_unique,test_conv[test]"
END:CMD
*/
